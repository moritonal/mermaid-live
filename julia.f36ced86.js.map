{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/julia/julia.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","tokenPostfix","keywords","types","keywordops","allops","constants","operators","token","ident","escape","escapes","tokenizer","root","next","cases","include","typeanno","gen","quote","paste","paren","sregexp","tregexp","rsstring","rtstring","dsstring","dtstring","interpolated","switchTo","interpolated_compound","whitespace","multi_comment"],"mappings":"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","file":"julia.f36ced86.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ]\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.julia',\r\n    keywords: [\r\n        'begin',\r\n        'while',\r\n        'if',\r\n        'for',\r\n        'try',\r\n        'return',\r\n        'break',\r\n        'continue',\r\n        'function',\r\n        'macro',\r\n        'quote',\r\n        'let',\r\n        'local',\r\n        'global',\r\n        'const',\r\n        'do',\r\n        'struct',\r\n        'module',\r\n        'baremodule',\r\n        'using',\r\n        'import',\r\n        'export',\r\n        'end',\r\n        'else',\r\n        'elseif',\r\n        'catch',\r\n        'finally',\r\n        'mutable',\r\n        'primitive',\r\n        'abstract',\r\n        'type',\r\n        'in',\r\n        'isa',\r\n        'where',\r\n        'new'\r\n    ],\r\n    types: [\r\n        'LinRange',\r\n        'LineNumberNode',\r\n        'LinearIndices',\r\n        'LoadError',\r\n        'MIME',\r\n        'Matrix',\r\n        'Method',\r\n        'MethodError',\r\n        'Missing',\r\n        'MissingException',\r\n        'Module',\r\n        'NTuple',\r\n        'NamedTuple',\r\n        'Nothing',\r\n        'Number',\r\n        'OrdinalRange',\r\n        'OutOfMemoryError',\r\n        'OverflowError',\r\n        'Pair',\r\n        'PartialQuickSort',\r\n        'PermutedDimsArray',\r\n        'Pipe',\r\n        'Ptr',\r\n        'QuoteNode',\r\n        'Rational',\r\n        'RawFD',\r\n        'ReadOnlyMemoryError',\r\n        'Real',\r\n        'ReentrantLock',\r\n        'Ref',\r\n        'Regex',\r\n        'RegexMatch',\r\n        'RoundingMode',\r\n        'SegmentationFault',\r\n        'Set',\r\n        'Signed',\r\n        'Some',\r\n        'StackOverflowError',\r\n        'StepRange',\r\n        'StepRangeLen',\r\n        'StridedArray',\r\n        'StridedMatrix',\r\n        'StridedVecOrMat',\r\n        'StridedVector',\r\n        'String',\r\n        'StringIndexError',\r\n        'SubArray',\r\n        'SubString',\r\n        'SubstitutionString',\r\n        'Symbol',\r\n        'SystemError',\r\n        'Task',\r\n        'Text',\r\n        'TextDisplay',\r\n        'Timer',\r\n        'Tuple',\r\n        'Type',\r\n        'TypeError',\r\n        'TypeVar',\r\n        'UInt',\r\n        'UInt128',\r\n        'UInt16',\r\n        'UInt32',\r\n        'UInt64',\r\n        'UInt8',\r\n        'UndefInitializer',\r\n        'AbstractArray',\r\n        'UndefKeywordError',\r\n        'AbstractChannel',\r\n        'UndefRefError',\r\n        'AbstractChar',\r\n        'UndefVarError',\r\n        'AbstractDict',\r\n        'Union',\r\n        'AbstractDisplay',\r\n        'UnionAll',\r\n        'AbstractFloat',\r\n        'UnitRange',\r\n        'AbstractIrrational',\r\n        'Unsigned',\r\n        'AbstractMatrix',\r\n        'AbstractRange',\r\n        'Val',\r\n        'AbstractSet',\r\n        'Vararg',\r\n        'AbstractString',\r\n        'VecElement',\r\n        'AbstractUnitRange',\r\n        'VecOrMat',\r\n        'AbstractVecOrMat',\r\n        'Vector',\r\n        'AbstractVector',\r\n        'VersionNumber',\r\n        'Any',\r\n        'WeakKeyDict',\r\n        'ArgumentError',\r\n        'WeakRef',\r\n        'Array',\r\n        'AssertionError',\r\n        'BigFloat',\r\n        'BigInt',\r\n        'BitArray',\r\n        'BitMatrix',\r\n        'BitSet',\r\n        'BitVector',\r\n        'Bool',\r\n        'BoundsError',\r\n        'CapturedException',\r\n        'CartesianIndex',\r\n        'CartesianIndices',\r\n        'Cchar',\r\n        'Cdouble',\r\n        'Cfloat',\r\n        'Channel',\r\n        'Char',\r\n        'Cint',\r\n        'Cintmax_t',\r\n        'Clong',\r\n        'Clonglong',\r\n        'Cmd',\r\n        'Colon',\r\n        'Complex',\r\n        'ComplexF16',\r\n        'ComplexF32',\r\n        'ComplexF64',\r\n        'CompositeException',\r\n        'Condition',\r\n        'Cptrdiff_t',\r\n        'Cshort',\r\n        'Csize_t',\r\n        'Cssize_t',\r\n        'Cstring',\r\n        'Cuchar',\r\n        'Cuint',\r\n        'Cuintmax_t',\r\n        'Culong',\r\n        'Culonglong',\r\n        'Cushort',\r\n        'Cvoid',\r\n        'Cwchar_t',\r\n        'Cwstring',\r\n        'DataType',\r\n        'DenseArray',\r\n        'DenseMatrix',\r\n        'DenseVecOrMat',\r\n        'DenseVector',\r\n        'Dict',\r\n        'DimensionMismatch',\r\n        'Dims',\r\n        'DivideError',\r\n        'DomainError',\r\n        'EOFError',\r\n        'Enum',\r\n        'ErrorException',\r\n        'Exception',\r\n        'ExponentialBackOff',\r\n        'Expr',\r\n        'Float16',\r\n        'Float32',\r\n        'Float64',\r\n        'Function',\r\n        'GlobalRef',\r\n        'HTML',\r\n        'IO',\r\n        'IOBuffer',\r\n        'IOContext',\r\n        'IOStream',\r\n        'IdDict',\r\n        'IndexCartesian',\r\n        'IndexLinear',\r\n        'IndexStyle',\r\n        'InexactError',\r\n        'InitError',\r\n        'Int',\r\n        'Int128',\r\n        'Int16',\r\n        'Int32',\r\n        'Int64',\r\n        'Int8',\r\n        'Integer',\r\n        'InterruptException',\r\n        'InvalidStateException',\r\n        'Irrational',\r\n        'KeyError'\r\n    ],\r\n    keywordops: ['<:', '>:', ':', '=>', '...', '.', '->', '?'],\r\n    allops: /[^\\w\\d\\s()\\[\\]{}\"'#]+/,\r\n    constants: [\r\n        'true',\r\n        'false',\r\n        'nothing',\r\n        'missing',\r\n        'undef',\r\n        'Inf',\r\n        'pi',\r\n        'NaN',\r\n        'π',\r\n        'ℯ',\r\n        'ans',\r\n        'PROGRAM_FILE',\r\n        'ARGS',\r\n        'C_NULL',\r\n        'VERSION',\r\n        'DEPOT_PATH',\r\n        'LOAD_PATH'\r\n    ],\r\n    operators: [\r\n        '!',\r\n        '!=',\r\n        '!==',\r\n        '%',\r\n        '&',\r\n        '*',\r\n        '+',\r\n        '-',\r\n        '/',\r\n        '//',\r\n        '<',\r\n        '<<',\r\n        '<=',\r\n        '==',\r\n        '===',\r\n        '=>',\r\n        '>',\r\n        '>=',\r\n        '>>',\r\n        '>>>',\r\n        '\\\\',\r\n        '^',\r\n        '|',\r\n        '|>',\r\n        '~',\r\n        '÷',\r\n        '∈',\r\n        '∉',\r\n        '∋',\r\n        '∌',\r\n        '∘',\r\n        '√',\r\n        '∛',\r\n        '∩',\r\n        '∪',\r\n        '≈',\r\n        '≉',\r\n        '≠',\r\n        '≡',\r\n        '≢',\r\n        '≤',\r\n        '≥',\r\n        '⊆',\r\n        '⊇',\r\n        '⊈',\r\n        '⊉',\r\n        '⊊',\r\n        '⊋',\r\n        '⊻'\r\n    ],\r\n    brackets: [\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' }\r\n    ],\r\n    ident: /π|ℯ|\\b(?!\\d)\\w+\\b/,\r\n    // escape sequences\r\n    escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\r\n    escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/(::)\\s*|\\b(isa)\\s+/, 'keyword', '@typeanno'],\r\n            [/\\b(isa)(\\s*\\(@ident\\s*,\\s*)/, ['keyword', { token: '', next: '@typeanno' }]],\r\n            [/\\b(type|struct)[ \\t]+/, 'keyword', '@typeanno'],\r\n            // symbols\r\n            [/^\\s*:@ident[!?]?/, 'metatag'],\r\n            [/(return)(\\s*:@ident[!?]?)/, ['keyword', 'metatag']],\r\n            [/(\\(|\\[|\\{|@allops)(\\s*:@ident[!?]?)/, ['', 'metatag']],\r\n            [/:\\(/, 'metatag', '@quote'],\r\n            // regular expressions\r\n            [/r\"\"\"/, 'regexp.delim', '@tregexp'],\r\n            [/r\"/, 'regexp.delim', '@sregexp'],\r\n            // strings\r\n            [/raw\"\"\"/, 'string.delim', '@rtstring'],\r\n            [/[bv]?\"\"\"/, 'string.delim', '@dtstring'],\r\n            [/raw\"/, 'string.delim', '@rsstring'],\r\n            [/[bv]?\"/, 'string.delim', '@dsstring'],\r\n            [\r\n                /(@ident)\\{/,\r\n                {\r\n                    cases: {\r\n                        '$1@types': { token: 'type', next: '@gen' },\r\n                        '@default': { token: 'type', next: '@gen' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /@ident[!?'']?(?=\\.?\\()/,\r\n                {\r\n                    cases: {\r\n                        '@types': 'type',\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'variable',\r\n                        '@default': 'keyword.flow'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /@ident[!?']?/,\r\n                {\r\n                    cases: {\r\n                        '@types': 'type',\r\n                        '@keywords': 'keyword',\r\n                        '@constants': 'variable',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\$\\w+/, 'key'],\r\n            [/\\$\\(/, 'key', '@paste'],\r\n            [/@@ident/, 'annotation'],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // characters\r\n            [/'(?:@escapes|.)'/, 'string.character'],\r\n            // delimiters and operators\r\n            [/[()\\[\\]{}]/, '@brackets'],\r\n            [\r\n                /@allops/,\r\n                {\r\n                    cases: {\r\n                        '@keywordops': 'keyword',\r\n                        '@operators': 'operator'\r\n                    }\r\n                }\r\n            ],\r\n            [/[;,]/, 'delimiter'],\r\n            // numbers\r\n            [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, 'number.hex'],\r\n            [/0[_oO][0-7](_?[0-7])*/, 'number.octal'],\r\n            [/0[bB][01](_?[01])*/, 'number.binary'],\r\n            [/[+\\-]?\\d+(\\.\\d+)?(im?|[eE][+\\-]?\\d+(\\.\\d+)?)?/, 'number']\r\n        ],\r\n        // type\r\n        typeanno: [\r\n            [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, 'type', '@gen'],\r\n            [/([a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*)(\\s*<:\\s*)/, ['type', 'keyword']],\r\n            [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, 'type', '@pop'],\r\n            ['', '', '@pop']\r\n        ],\r\n        // generic type\r\n        gen: [\r\n            [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*\\{/, 'type', '@push'],\r\n            [/[a-zA-Z_]\\w*(?:\\.[a-zA-Z_]\\w*)*/, 'type'],\r\n            [/<:/, 'keyword'],\r\n            [/(\\})(\\s*<:\\s*)/, ['type', { token: 'keyword', next: '@pop' }]],\r\n            [/\\}/, 'type', '@pop'],\r\n            { include: '@root' }\r\n        ],\r\n        // $(...)\r\n        quote: [\r\n            [/\\$\\(/, 'key', '@paste'],\r\n            [/\\(/, '@brackets', '@paren'],\r\n            [/\\)/, 'metatag', '@pop'],\r\n            { include: '@root' }\r\n        ],\r\n        // :(...)\r\n        paste: [\r\n            [/:\\(/, 'metatag', '@quote'],\r\n            [/\\(/, '@brackets', '@paren'],\r\n            [/\\)/, 'key', '@pop'],\r\n            { include: '@root' }\r\n        ],\r\n        // (...)\r\n        paren: [\r\n            [/\\$\\(/, 'key', '@paste'],\r\n            [/:\\(/, 'metatag', '@quote'],\r\n            [/\\(/, '@brackets', '@push'],\r\n            [/\\)/, '@brackets', '@pop'],\r\n            { include: '@root' }\r\n        ],\r\n        // r\"egex string\"\r\n        sregexp: [\r\n            [/^.*/, 'invalid'],\r\n            [/[^\\\\\"()\\[\\]{}]/, 'regexp'],\r\n            [/[()\\[\\]{}]/, '@brackets'],\r\n            [/\\\\./, 'operator.scss'],\r\n            [/\"[imsx]*/, 'regexp.delim', '@pop']\r\n        ],\r\n        tregexp: [\r\n            [/[^\\\\\"()\\[\\]{}]/, 'regexp'],\r\n            [/[()\\[\\]{}]/, '@brackets'],\r\n            [/\\\\./, 'operator.scss'],\r\n            [/\"(?!\"\")/, 'string'],\r\n            [/\"\"\"[imsx]*/, 'regexp.delim', '@pop']\r\n        ],\r\n        // raw\"string\"\r\n        rsstring: [\r\n            [/^.*/, 'invalid'],\r\n            [/[^\\\\\"]/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"/, 'string.delim', '@pop']\r\n        ],\r\n        rtstring: [\r\n            [/[^\\\\\"]/, 'string'],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"(?!\"\")/, 'string'],\r\n            [/\"\"\"/, 'string.delim', '@pop']\r\n        ],\r\n        // \"string\".\r\n        dsstring: [\r\n            [/^.*/, 'invalid'],\r\n            [/[^\\\\\"\\$]/, 'string'],\r\n            [/\\$/, '', '@interpolated'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, 'string.delim', '@pop']\r\n        ],\r\n        dtstring: [\r\n            [/[^\\\\\"\\$]/, 'string'],\r\n            [/\\$/, '', '@interpolated'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"(?!\"\")/, 'string'],\r\n            [/\"\"\"/, 'string.delim', '@pop']\r\n        ],\r\n        // interpolated sequence\r\n        interpolated: [\r\n            [/\\(/, { token: '', switchTo: '@interpolated_compound' }],\r\n            [/[a-zA-Z_]\\w*/, 'identifier'],\r\n            ['', '', '@pop'] // just a $ is interpreted as a $\r\n        ],\r\n        // any code\r\n        interpolated_compound: [[/\\)/, '', '@pop'], { include: '@root' }],\r\n        // whitespace & comments\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/#=/, 'comment', '@multi_comment'],\r\n            [/#.*$/, 'comment']\r\n        ],\r\n        multi_comment: [\r\n            [/#=/, 'comment', '@push'],\r\n            [/=#/, 'comment', '@pop'],\r\n            [/=(?!#)|#(?!=)/, 'comment'],\r\n            [/[^#=]+/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"]}