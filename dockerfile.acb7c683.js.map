{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"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","file":"dockerfile.acb7c683.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(ONBUILD)(\\s+)/, ['keyword', '']],\r\n            [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [\r\n                /(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/,\r\n                { token: 'keyword', next: '@arguments' }\r\n            ]\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /(@variable)/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /\\\\/,\r\n                {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /./,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [\r\n                /\\s+/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [[/(^#.*$)/, 'comment', '@popall']],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/\\\\'$/, '', '@popall'],\r\n            [/\\\\'/, ''],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [\r\n                /[^\\\\\\$']/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [\r\n                /[^\\\\\\$\"]/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"]}