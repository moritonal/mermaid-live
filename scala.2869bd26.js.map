{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","keywords","softKeywords","constants","modifiers","softModifiers","name","type","symbols","digits","hexdigits","escapes","fstring_conv","tokenizer","root","token","bracket","next","cases","include","import","allowMethod","comment","case","vardef","string","switchTo","stringt","fstring","fstringt","sstring","sstringt","interp","rawstring","rawstringt","whitespace"],"mappings":"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","file":"scala.2869bd26.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    /*\r\n     * `...` is allowed as an identifier.\r\n     * $ is allowed in identifiers.\r\n     * unary_<op> is allowed as an identifier.\r\n     * <name>_= is allowed as an identifier.\r\n     */\r\n    wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))'),\r\n            end: new RegExp('^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.scala',\r\n    // We can't easily add everything from Dotty, but we can at least add some of its keywords\r\n    keywords: [\r\n        'asInstanceOf',\r\n        'catch',\r\n        'class',\r\n        'classOf',\r\n        'def',\r\n        'do',\r\n        'else',\r\n        'extends',\r\n        'finally',\r\n        'for',\r\n        'foreach',\r\n        'forSome',\r\n        'if',\r\n        'import',\r\n        'isInstanceOf',\r\n        'macro',\r\n        'match',\r\n        'new',\r\n        'object',\r\n        'package',\r\n        'return',\r\n        'throw',\r\n        'trait',\r\n        'try',\r\n        'type',\r\n        'until',\r\n        'val',\r\n        'var',\r\n        'while',\r\n        'with',\r\n        'yield',\r\n        // Dotty-specific:\r\n        'given',\r\n        'enum',\r\n        'then'\r\n    ],\r\n    // Dotty-specific:\r\n    softKeywords: ['as', 'export', 'extension', 'end', 'derives', 'on'],\r\n    constants: ['true', 'false', 'null', 'this', 'super'],\r\n    modifiers: [\r\n        'abstract',\r\n        'final',\r\n        'implicit',\r\n        'lazy',\r\n        'override',\r\n        'private',\r\n        'protected',\r\n        'sealed'\r\n    ],\r\n    // Dotty-specific:\r\n    softModifiers: ['inline', 'opaque', 'open', 'transparent', 'using'],\r\n    name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\r\n    type: /(?:[A-Z][\\w$]*)/,\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\r\n    digits: /\\d+(_+\\d+)*/,\r\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n    // C# style strings\r\n    escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // strings\r\n            [/\\braw\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@rawstringt' }],\r\n            [/\\braw\"/, { token: 'string.quote', bracket: '@open', next: '@rawstring' }],\r\n            [/\\bs\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@sstringt' }],\r\n            [/\\bs\"/, { token: 'string.quote', bracket: '@open', next: '@sstring' }],\r\n            [/\\bf\"\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@fstringt' }],\r\n            [/\\bf\"/, { token: 'string.quote', bracket: '@open', next: '@fstring' }],\r\n            [/\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@stringt' }],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\r\n            // numbers\r\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float', '@allowMethod'],\r\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float', '@allowMethod'],\r\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex', '@allowMethod'],\r\n            [/(@digits)[fFdD]/, 'number.float', '@allowMethod'],\r\n            [/(@digits)[lL]?/, 'number', '@allowMethod'],\r\n            [/\\b_\\*/, 'key'],\r\n            [/\\b(_)\\b/, 'keyword', '@allowMethod'],\r\n            // identifiers and keywords\r\n            [/\\bimport\\b/, 'keyword', '@import'],\r\n            [/\\b(case)([ \\t]+)(class)\\b/, ['keyword.modifier', 'white', 'keyword']],\r\n            [/\\bcase\\b/, 'keyword', '@case'],\r\n            [/\\bva[lr]\\b/, 'keyword', '@vardef'],\r\n            [\r\n                /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\r\n                ['keyword', 'white', 'identifier']\r\n            ],\r\n            [/@name(?=[ \\t]*:(?!:))/, 'variable'],\r\n            [/(\\.)(@name|@symbols)/, ['operator', { token: '@rematch', next: '@allowMethod' }]],\r\n            [/([{(])(\\s*)(@name(?=\\s*=>))/, ['@brackets', 'white', 'variable']],\r\n            [\r\n                /@name/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@softKeywords': 'keyword',\r\n                        '@modifiers': 'keyword.modifier',\r\n                        '@softModifiers': 'keyword.modifier',\r\n                        '@constants': {\r\n                            token: 'constant',\r\n                            next: '@allowMethod'\r\n                        },\r\n                        '@default': {\r\n                            token: 'identifier',\r\n                            next: '@allowMethod'\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n            [/@type/, 'type', '@allowMethod'],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // @ annotations.\r\n            [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, 'annotation'],\r\n            // delimiters and operators\r\n            [/[{(]/, '@brackets'],\r\n            [/[})]/, '@brackets', '@allowMethod'],\r\n            [/\\[/, 'operator.square'],\r\n            [/](?!\\s*(?:va[rl]|def|type)\\b)/, 'operator.square', '@allowMethod'],\r\n            [/]/, 'operator.square'],\r\n            [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, 'keyword'],\r\n            [/@symbols/, 'operator'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,\\.]/, 'delimiter'],\r\n            // symbols\r\n            [/'[a-zA-Z$][\\w$]*(?!')/, 'attribute.name'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string', '@allowMethod'],\r\n            [\r\n                /(')(@escapes)(')/,\r\n                ['string', 'string.escape', { token: 'string', next: '@allowMethod' }]\r\n            ],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        import: [\r\n            [/;/, 'delimiter', '@pop'],\r\n            [/^|$/, '', '@pop'],\r\n            [/[ \\t]+/, 'white'],\r\n            [/[\\n\\r]+/, 'white', '@pop'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/@name|@type/, 'type'],\r\n            [/[(){}]/, '@brackets'],\r\n            [/[[\\]]/, 'operator.square'],\r\n            [/[\\.,]/, 'delimiter']\r\n        ],\r\n        allowMethod: [\r\n            [/^|$/, '', '@pop'],\r\n            [/[ \\t]+/, 'white'],\r\n            [/[\\n\\r]+/, 'white', '@pop'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/(?==>[\\s\\w([{])/, 'keyword', '@pop'],\r\n            [\r\n                /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword', next: '@pop' },\r\n                        '->|<-|>:|<:|<%': { token: 'keyword', next: '@pop' },\r\n                        '@default': { token: '@rematch', next: '@pop' }\r\n                    }\r\n                }\r\n            ],\r\n            ['', '', '@pop']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            [/\\*\\//, 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        case: [\r\n            [/\\b_\\*/, 'key'],\r\n            [/\\b(_|true|false|null|this|super)\\b/, 'keyword', '@allowMethod'],\r\n            [/\\bif\\b|=>/, 'keyword', '@pop'],\r\n            [/`[^`]+`/, 'identifier', '@allowMethod'],\r\n            [/@name/, 'variable', '@allowMethod'],\r\n            [/:::?|\\||@(?![a-z_$])/, 'keyword'],\r\n            { include: '@root' }\r\n        ],\r\n        vardef: [\r\n            [/\\b_\\*/, 'key'],\r\n            [/\\b(_|true|false|null|this|super)\\b/, 'keyword'],\r\n            [/@name/, 'variable'],\r\n            [/:::?|\\||@(?![a-z_$])/, 'keyword'],\r\n            [/=|:(?!:)/, 'operator', '@pop'],\r\n            [/$/, 'white', '@pop'],\r\n            { include: '@root' }\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"\\n\\r]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [\r\n                /\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ]\r\n        ],\r\n        stringt: [\r\n            [/[^\\\\\"\\n\\r]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"(?=\"\"\")/, 'string'],\r\n            [\r\n                /\"\"\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\"/, 'string']\r\n        ],\r\n        fstring: [\r\n            [/@escapes/, 'string.escape'],\r\n            [\r\n                /\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\\$\\$/, 'string'],\r\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\r\n            [/\\$\\{/, 'operator', '@interp'],\r\n            [/%%/, 'string'],\r\n            [\r\n                /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\r\n                ['metatag', 'keyword.modifier', 'number', 'metatag']\r\n            ],\r\n            [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, ['metatag', 'number', 'metatag']],\r\n            [/(%)([\\-#+ 0,(])(@fstring_conv)/, ['metatag', 'keyword.modifier', 'metatag']],\r\n            [/(%)(@fstring_conv)/, ['metatag', 'metatag']],\r\n            [/./, 'string']\r\n        ],\r\n        fstringt: [\r\n            [/@escapes/, 'string.escape'],\r\n            [/\"(?=\"\"\")/, 'string'],\r\n            [\r\n                /\"\"\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\\$\\$/, 'string'],\r\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\r\n            [/\\$\\{/, 'operator', '@interp'],\r\n            [/%%/, 'string'],\r\n            [\r\n                /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\r\n                ['metatag', 'keyword.modifier', 'number', 'metatag']\r\n            ],\r\n            [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, ['metatag', 'number', 'metatag']],\r\n            [/(%)([\\-#+ 0,(])(@fstring_conv)/, ['metatag', 'keyword.modifier', 'metatag']],\r\n            [/(%)(@fstring_conv)/, ['metatag', 'metatag']],\r\n            [/./, 'string']\r\n        ],\r\n        sstring: [\r\n            [/@escapes/, 'string.escape'],\r\n            [\r\n                /\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\\$\\$/, 'string'],\r\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\r\n            [/\\$\\{/, 'operator', '@interp'],\r\n            [/./, 'string']\r\n        ],\r\n        sstringt: [\r\n            [/@escapes/, 'string.escape'],\r\n            [/\"(?=\"\"\")/, 'string'],\r\n            [\r\n                /\"\"\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\\$\\$/, 'string'],\r\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\r\n            [/\\$\\{/, 'operator', '@interp'],\r\n            [/./, 'string']\r\n        ],\r\n        interp: [[/{/, 'operator', '@push'], [/}/, 'operator', '@pop'], { include: '@root' }],\r\n        rawstring: [\r\n            [/[^\"]/, 'string'],\r\n            [\r\n                /\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ]\r\n        ],\r\n        rawstringt: [\r\n            [/[^\"]/, 'string'],\r\n            [/\"(?=\"\"\")/, 'string'],\r\n            [\r\n                /\"\"\"/,\r\n                {\r\n                    token: 'string.quote',\r\n                    bracket: '@close',\r\n                    switchTo: '@allowMethod'\r\n                }\r\n            ],\r\n            [/\"/, 'string']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"]}