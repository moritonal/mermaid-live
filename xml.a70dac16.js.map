{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":"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","file":"xml.a70dac16.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nexport var conf = {\r\n    comments: {\r\n        blockComment: ['<!--', '-->']\r\n    },\r\n    brackets: [['<', '>']],\r\n    autoClosingPairs: [\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\r\n            action: {\r\n                indentAction: languages.IndentAction.IndentOutdent\r\n            }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: languages.IndentAction.Indent }\r\n        }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.xml',\r\n    ignoreCase: true,\r\n    // Useful regular expressions\r\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\r\n    tokenizer: {\r\n        root: [\r\n            [/[^<&]+/, ''],\r\n            { include: '@whitespace' },\r\n            // Standard opening tag\r\n            [/(<)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'tag', next: '@tag' }]],\r\n            // Standard closing tag\r\n            [\r\n                /(<\\/)(@qualifiedName)(\\s*)(>)/,\r\n                [{ token: 'delimiter' }, { token: 'tag' }, '', { token: 'delimiter' }]\r\n            ],\r\n            // Meta tags - instruction\r\n            [/(<\\?)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'metatag', next: '@tag' }]],\r\n            // Meta tags - declaration\r\n            [/(<\\!)(@qualifiedName)/, [{ token: 'delimiter' }, { token: 'metatag', next: '@tag' }]],\r\n            // CDATA\r\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\r\n            [/&\\w+;/, 'string.escape']\r\n        ],\r\n        cdata: [\r\n            [/[^\\]]+/, ''],\r\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\r\n            [/\\]/, '']\r\n        ],\r\n        tag: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [\r\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/,\r\n                ['attribute.name', '', 'attribute.value']\r\n            ],\r\n            [\r\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\r\n                ['attribute.name', '', 'attribute.value']\r\n            ],\r\n            [\r\n                /(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/,\r\n                ['attribute.name', '', 'attribute.value']\r\n            ],\r\n            [/@qualifiedName/, 'attribute.name'],\r\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\r\n            [/(\\/)(>)/, [{ token: 'tag' }, { token: 'delimiter', next: '@pop' }]],\r\n            [/>/, { token: 'delimiter', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/<!--/, { token: 'comment', next: '@comment' }]\r\n        ],\r\n        comment: [\r\n            [/[^<\\-]+/, 'comment.content'],\r\n            [/-->/, { token: 'comment', next: '@pop' }],\r\n            [/<!--/, 'comment.content.invalid'],\r\n            [/[<\\-]/, 'comment.content']\r\n        ]\r\n    }\r\n};\r\n"]}