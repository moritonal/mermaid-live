{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/m3/m3.js"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","reservedConstNames","reservedTypeNames","operators","relations","delimiters","symbols","escapes","tokenizer","root","cases","include","text","comment","pragma","whitespace"],"mappings":"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","file":"m3.936c7ffb.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        blockComment: ['(*', '*)']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '(*', close: '*)' },\r\n        { open: '<*', close: '*>' },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.m3',\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: [\r\n        'AND',\r\n        'ANY',\r\n        'ARRAY',\r\n        'AS',\r\n        'BEGIN',\r\n        'BITS',\r\n        'BRANDED',\r\n        'BY',\r\n        'CASE',\r\n        'CONST',\r\n        'DIV',\r\n        'DO',\r\n        'ELSE',\r\n        'ELSIF',\r\n        'END',\r\n        'EVAL',\r\n        'EXCEPT',\r\n        'EXCEPTION',\r\n        'EXIT',\r\n        'EXPORTS',\r\n        'FINALLY',\r\n        'FOR',\r\n        'FROM',\r\n        'GENERIC',\r\n        'IF',\r\n        'IMPORT',\r\n        'IN',\r\n        'INTERFACE',\r\n        'LOCK',\r\n        'LOOP',\r\n        'METHODS',\r\n        'MOD',\r\n        'MODULE',\r\n        'NOT',\r\n        'OBJECT',\r\n        'OF',\r\n        'OR',\r\n        'OVERRIDES',\r\n        'PROCEDURE',\r\n        'RAISE',\r\n        'RAISES',\r\n        'READONLY',\r\n        'RECORD',\r\n        'REF',\r\n        'REPEAT',\r\n        'RETURN',\r\n        'REVEAL',\r\n        'SET',\r\n        'THEN',\r\n        'TO',\r\n        'TRY',\r\n        'TYPE',\r\n        'TYPECASE',\r\n        'UNSAFE',\r\n        'UNTIL',\r\n        'UNTRACED',\r\n        'VALUE',\r\n        'VAR',\r\n        'WHILE',\r\n        'WITH'\r\n    ],\r\n    reservedConstNames: [\r\n        'ABS',\r\n        'ADR',\r\n        'ADRSIZE',\r\n        'BITSIZE',\r\n        'BYTESIZE',\r\n        'CEILING',\r\n        'DEC',\r\n        'DISPOSE',\r\n        'FALSE',\r\n        'FIRST',\r\n        'FLOAT',\r\n        'FLOOR',\r\n        'INC',\r\n        'ISTYPE',\r\n        'LAST',\r\n        'LOOPHOLE',\r\n        'MAX',\r\n        'MIN',\r\n        'NARROW',\r\n        'NEW',\r\n        'NIL',\r\n        'NUMBER',\r\n        'ORD',\r\n        'ROUND',\r\n        'SUBARRAY',\r\n        'TRUE',\r\n        'TRUNC',\r\n        'TYPECODE',\r\n        'VAL'\r\n    ],\r\n    reservedTypeNames: [\r\n        'ADDRESS',\r\n        'ANY',\r\n        'BOOLEAN',\r\n        'CARDINAL',\r\n        'CHAR',\r\n        'EXTENDED',\r\n        'INTEGER',\r\n        'LONGCARD',\r\n        'LONGINT',\r\n        'LONGREAL',\r\n        'MUTEX',\r\n        'NULL',\r\n        'REAL',\r\n        'REFANY',\r\n        'ROOT',\r\n        'TEXT'\r\n    ],\r\n    operators: ['+', '-', '*', '/', '&', '^', '.'],\r\n    relations: ['=', '#', '<', '<=', '>', '>=', '<:', ':'],\r\n    delimiters: ['|', '..', '=>', ',', ';', ':='],\r\n    symbols: /[>=<#.,:;+\\-*/&^]+/,\r\n    escapes: /\\\\(?:[\\\\fnrt\"']|[0-7]{3})/,\r\n    tokenizer: {\r\n        root: [\r\n            // Identifiers and keywords\r\n            [/_\\w*/, 'invalid'],\r\n            [\r\n                /[a-zA-Z][a-zA-Z0-9_]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@reservedConstNames': { token: 'constant.reserved.$0' },\r\n                        '@reservedTypeNames': { token: 'type.reserved.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // Whitespace\r\n            { include: '@whitespace' },\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            // Integer- and real literals\r\n            [/[0-9]+\\.[0-9]+(?:[DdEeXx][\\+\\-]?[0-9]+)?/, 'number.float'],\r\n            [/[0-9]+(?:\\_[0-9a-fA-F]+)?L?/, 'number'],\r\n            // Operators, relations, and delimiters\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'operators',\r\n                        '@relations': 'operators',\r\n                        '@delimiters': 'delimiter',\r\n                        '@default': 'invalid'\r\n                    }\r\n                }\r\n            ],\r\n            // Character literals\r\n            [/'[^\\\\']'/, 'string.char'],\r\n            [/(')(@escapes)(')/, ['string.char', 'string.escape', 'string.char']],\r\n            [/'/, 'invalid'],\r\n            // Text literals\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'invalid'],\r\n            [/\"/, 'string.text', '@text']\r\n        ],\r\n        text: [\r\n            [/[^\\\\\"]+/, 'string.text'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'invalid'],\r\n            [/\"/, 'string.text', '@pop']\r\n        ],\r\n        comment: [\r\n            [/\\(\\*/, 'comment', '@push'],\r\n            [/\\*\\)/, 'comment', '@pop'],\r\n            [/./, 'comment']\r\n        ],\r\n        pragma: [\r\n            [/<\\*/, 'keyword.pragma', '@push'],\r\n            [/\\*>/, 'keyword.pragma', '@pop'],\r\n            [/./, 'keyword.pragma']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\(\\*/, 'comment', '@comment'],\r\n            [/<\\*/, 'keyword.pragma', '@pragma']\r\n        ]\r\n    }\r\n};\r\n"]}