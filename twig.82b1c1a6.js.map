{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","keywords","tokenizer","root","token","next","commentState","blockState","include","rawDataState","variableState","stringState","interpolationState","expression","cases","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"mappings":"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","file":"twig.82b1c1a6.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['{#', '#}']\r\n    },\r\n    brackets: [\r\n        ['{#', '#}'],\r\n        ['{%', '%}'],\r\n        ['{{', '}}'],\r\n        ['(', ')'],\r\n        ['[', ']'],\r\n        // HTML\r\n        ['<!--', '-->'],\r\n        ['<', '>']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{# ', close: ' #}' },\r\n        { open: '{% ', close: ' %}' },\r\n        { open: '{{ ', close: ' }}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        // HTML\r\n        { open: '<', close: '>' }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    ignoreCase: true,\r\n    keywords: [\r\n        // (opening) tags\r\n        'apply',\r\n        'autoescape',\r\n        'block',\r\n        'deprecated',\r\n        'do',\r\n        'embed',\r\n        'extends',\r\n        'flush',\r\n        'for',\r\n        'from',\r\n        'if',\r\n        'import',\r\n        'include',\r\n        'macro',\r\n        'sandbox',\r\n        'set',\r\n        'use',\r\n        'verbatim',\r\n        'with',\r\n        // closing tags\r\n        'endapply',\r\n        'endautoescape',\r\n        'endblock',\r\n        'endembed',\r\n        'endfor',\r\n        'endif',\r\n        'endmacro',\r\n        'endsandbox',\r\n        'endset',\r\n        'endwith',\r\n        // literals\r\n        'true',\r\n        'false'\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            // whitespace\r\n            [/\\s+/],\r\n            // Twig Tag Delimiters\r\n            [/{#/, 'comment.twig', '@commentState'],\r\n            [/{%[-~]?/, 'delimiter.twig', '@blockState'],\r\n            [/{{[-~]?/, 'delimiter.twig', '@variableState'],\r\n            // HTML\r\n            [/<!DOCTYPE/, 'metatag.html', '@doctype'],\r\n            [/<!--/, 'comment.html', '@comment'],\r\n            [\r\n                /(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/,\r\n                ['delimiter.html', 'tag.html', '', 'delimiter.html']\r\n            ],\r\n            [/(<)(script)/, ['delimiter.html', { token: 'tag.html', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter.html', { token: 'tag.html', next: '@style' }]],\r\n            [\r\n                /(<)((?:[\\w\\-]+:)?[\\w\\-]+)/,\r\n                ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]\r\n            ],\r\n            [\r\n                /(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/,\r\n                ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]\r\n            ],\r\n            [/</, 'delimiter.html'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        /**\r\n         * Comment Tag Handling\r\n         */\r\n        commentState: [\r\n            [/#}/, 'comment.twig', '@pop'],\r\n            [/./, 'comment.twig']\r\n        ],\r\n        /**\r\n         * Block Tag Handling\r\n         */\r\n        blockState: [\r\n            [/[-~]?%}/, 'delimiter.twig', '@pop'],\r\n            // whitespace\r\n            [/\\s+/],\r\n            // verbatim\r\n            // Unlike other blocks, verbatim ehas its own state\r\n            // transition to ensure we mark its contents as strings.\r\n            [\r\n                /(verbatim)(\\s*)([-~]?%})/,\r\n                ['keyword.twig', '', { token: 'delimiter.twig', next: '@rawDataState' }]\r\n            ],\r\n            { include: 'expression' }\r\n        ],\r\n        rawDataState: [\r\n            // endverbatim\r\n            [\r\n                /({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/,\r\n                [\r\n                    'delimiter.twig',\r\n                    '',\r\n                    'keyword.twig',\r\n                    '',\r\n                    { token: 'delimiter.twig', next: '@popall' }\r\n                ]\r\n            ],\r\n            [/./, 'string.twig']\r\n        ],\r\n        /**\r\n         * Variable Tag Handling\r\n         */\r\n        variableState: [[/[-~]?}}/, 'delimiter.twig', '@pop'], { include: 'expression' }],\r\n        stringState: [\r\n            // closing double quoted string\r\n            [/\"/, 'string.twig', '@pop'],\r\n            // interpolation start\r\n            [/#{\\s*/, 'string.twig', '@interpolationState'],\r\n            // string part\r\n            [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, 'string.twig']\r\n        ],\r\n        interpolationState: [\r\n            // interpolation end\r\n            [/}/, 'string.twig', '@pop'],\r\n            { include: 'expression' }\r\n        ],\r\n        /**\r\n         * Expression Handling\r\n         */\r\n        expression: [\r\n            // whitespace\r\n            [/\\s+/],\r\n            // operators - math\r\n            [/\\+|-|\\/{1,2}|%|\\*{1,2}/, 'operators.twig'],\r\n            // operators - logic\r\n            [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, ['operators.twig', '']],\r\n            // operators - comparison (symbols)\r\n            [/==|!=|<|>|>=|<=/, 'operators.twig'],\r\n            // operators - comparison (words)\r\n            [/(starts with|ends with|matches)(\\s+)/, ['operators.twig', '']],\r\n            // operators - containment\r\n            [/(in)(\\s+)/, ['operators.twig', '']],\r\n            // operators - test\r\n            [/(is)(\\s+)/, ['operators.twig', '']],\r\n            // operators - misc\r\n            [/\\||~|:|\\.{1,2}|\\?{1,2}/, 'operators.twig'],\r\n            // names\r\n            [\r\n                /[^\\W\\d][\\w]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword.twig',\r\n                        '@default': 'variable.twig'\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/\\d+(\\.\\d+)?/, 'number.twig'],\r\n            // punctuation\r\n            [/\\(|\\)|\\[|\\]|{|}|,/, 'delimiter.twig'],\r\n            // strings\r\n            [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, 'string.twig'],\r\n            // opening double quoted string\r\n            [/\"/, 'string.twig', '@stringState'],\r\n            // misc syntactic constructs\r\n            // These are not operators per se, but for the purposes of lexical analysis we\r\n            // can treat them as such.\r\n            // arrow functions\r\n            [/=>/, 'operators.twig'],\r\n            // assignment\r\n            [/=/, 'operators.twig']\r\n        ],\r\n        /**\r\n         * HTML\r\n         */\r\n        doctype: [\r\n            [/[^>]+/, 'metatag.content.html'],\r\n            [/>/, 'metatag.html', '@pop']\r\n        ],\r\n        comment: [\r\n            [/-->/, 'comment.html', '@pop'],\r\n            [/[^-]+/, 'comment.content.html'],\r\n            [/./, 'comment.content.html']\r\n        ],\r\n        otherTag: [\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value.html'],\r\n            [/'([^']*)'/, 'attribute.value.html'],\r\n            [/[\\w\\-]+/, 'attribute.name.html'],\r\n            [/=/, 'delimiter.html'],\r\n            [/[ \\t\\r\\n]+/] // whitespace\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/type/, 'attribute.name.html', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value.html'],\r\n            [/'([^']*)'/, 'attribute.value.html'],\r\n            [/[\\w\\-]+/, 'attribute.name.html'],\r\n            [/=/, 'delimiter.html'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [\r\n                /(<\\/)(script\\s*)(>)/,\r\n                ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]\r\n            ]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/=/, 'delimiter.html', '@scriptAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value.html',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value.html',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@scriptEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value.html'],\r\n            [/'([^']*)'/, 'attribute.value.html'],\r\n            [/[\\w\\-]+/, 'attribute.name.html'],\r\n            [/=/, 'delimiter.html'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/type/, 'attribute.name.html', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value.html'],\r\n            [/'([^']*)'/, 'attribute.value.html'],\r\n            [/[\\w\\-]+/, 'attribute.name.html'],\r\n            [/=/, 'delimiter.html'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [\r\n                /(<\\/)(style\\s*)(>)/,\r\n                ['delimiter.html', 'tag.html', { token: 'delimiter.html', next: '@pop' }]\r\n            ]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/=/, 'delimiter.html', '@styleAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value.html',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value.html',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter.html',\r\n                    next: '@styleEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value.html'],\r\n            [/'([^']*)'/, 'attribute.value.html'],\r\n            [/[\\w\\-]+/, 'attribute.name.html'],\r\n            [/=/, 'delimiter.html'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ]\r\n    }\r\n};\r\n"]}