{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pascal/pascal.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","typeKeywords","operators","symbols","tokenizer","root","cases","include","comment","string","bracket","next","whitespace"],"mappings":"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","file":"pascal.ab80b584.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    // the default separators except `@$`\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['{', '}']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['<', '>']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp(\"^\\\\s*\\\\{\\\\$REGION(\\\\s\\\\'.*\\\\')?\\\\}\"),\r\n            end: new RegExp('^\\\\s*\\\\{\\\\$ENDREGION\\\\}')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.pascal',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'absolute',\r\n        'abstract',\r\n        'all',\r\n        'and_then',\r\n        'array',\r\n        'as',\r\n        'asm',\r\n        'attribute',\r\n        'begin',\r\n        'bindable',\r\n        'case',\r\n        'class',\r\n        'const',\r\n        'contains',\r\n        'default',\r\n        'div',\r\n        'else',\r\n        'end',\r\n        'except',\r\n        'exports',\r\n        'external',\r\n        'far',\r\n        'file',\r\n        'finalization',\r\n        'finally',\r\n        'forward',\r\n        'generic',\r\n        'goto',\r\n        'if',\r\n        'implements',\r\n        'import',\r\n        'in',\r\n        'index',\r\n        'inherited',\r\n        'initialization',\r\n        'interrupt',\r\n        'is',\r\n        'label',\r\n        'library',\r\n        'mod',\r\n        'module',\r\n        'name',\r\n        'near',\r\n        'not',\r\n        'object',\r\n        'of',\r\n        'on',\r\n        'only',\r\n        'operator',\r\n        'or_else',\r\n        'otherwise',\r\n        'override',\r\n        'package',\r\n        'packed',\r\n        'pow',\r\n        'private',\r\n        'program',\r\n        'protected',\r\n        'public',\r\n        'published',\r\n        'interface',\r\n        'implementation',\r\n        'qualified',\r\n        'read',\r\n        'record',\r\n        'resident',\r\n        'requires',\r\n        'resourcestring',\r\n        'restricted',\r\n        'segment',\r\n        'set',\r\n        'shl',\r\n        'shr',\r\n        'specialize',\r\n        'stored',\r\n        'then',\r\n        'threadvar',\r\n        'to',\r\n        'try',\r\n        'type',\r\n        'unit',\r\n        'uses',\r\n        'var',\r\n        'view',\r\n        'virtual',\r\n        'dynamic',\r\n        'overload',\r\n        'reintroduce',\r\n        'with',\r\n        'write',\r\n        'xor',\r\n        'true',\r\n        'false',\r\n        'procedure',\r\n        'function',\r\n        'constructor',\r\n        'destructor',\r\n        'property',\r\n        'break',\r\n        'continue',\r\n        'exit',\r\n        'abort',\r\n        'while',\r\n        'do',\r\n        'for',\r\n        'raise',\r\n        'repeat',\r\n        'until'\r\n    ],\r\n    typeKeywords: [\r\n        'boolean',\r\n        'double',\r\n        'byte',\r\n        'integer',\r\n        'shortint',\r\n        'char',\r\n        'longint',\r\n        'float',\r\n        'string'\r\n    ],\r\n    operators: [\r\n        '=',\r\n        '>',\r\n        '<',\r\n        '<=',\r\n        '>=',\r\n        '<>',\r\n        ':',\r\n        ':=',\r\n        'and',\r\n        'or',\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '/',\r\n        '@',\r\n        '&',\r\n        '^',\r\n        '%'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [\r\n                /[a-zA-Z_][\\w]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/'/, 'string', '@string'],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/'/, 'string.invalid'],\r\n            [/\\#\\d+/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^\\*\\}]+/, 'comment'],\r\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\r\n            [/\\}/, 'comment', '@pop'],\r\n            [/[\\{]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\{/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"]}