{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","cases","token","bracket","next","include","whitespace","comment","string","numbers"],"mappings":"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","file":"rust.0262dbaa.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\r\n            end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    tokenPostfix: '.rust',\r\n    defaultToken: 'invalid',\r\n    keywords: [\r\n        'as',\r\n        'async',\r\n        'await',\r\n        'box',\r\n        'break',\r\n        'const',\r\n        'continue',\r\n        'crate',\r\n        'dyn',\r\n        'else',\r\n        'enum',\r\n        'extern',\r\n        'false',\r\n        'fn',\r\n        'for',\r\n        'if',\r\n        'impl',\r\n        'in',\r\n        'let',\r\n        'loop',\r\n        'match',\r\n        'mod',\r\n        'move',\r\n        'mut',\r\n        'pub',\r\n        'ref',\r\n        'return',\r\n        'self',\r\n        'static',\r\n        'struct',\r\n        'super',\r\n        'trait',\r\n        'true',\r\n        'try',\r\n        'type',\r\n        'unsafe',\r\n        'use',\r\n        'where',\r\n        'while',\r\n        'catch',\r\n        'default',\r\n        'union',\r\n        'static',\r\n        'abstract',\r\n        'alignof',\r\n        'become',\r\n        'do',\r\n        'final',\r\n        'macro',\r\n        'offsetof',\r\n        'override',\r\n        'priv',\r\n        'proc',\r\n        'pure',\r\n        'sizeof',\r\n        'typeof',\r\n        'unsized',\r\n        'virtual',\r\n        'yield'\r\n    ],\r\n    typeKeywords: [\r\n        'Self',\r\n        'm32',\r\n        'm64',\r\n        'm128',\r\n        'f80',\r\n        'f16',\r\n        'f128',\r\n        'int',\r\n        'uint',\r\n        'float',\r\n        'char',\r\n        'bool',\r\n        'u8',\r\n        'u16',\r\n        'u32',\r\n        'u64',\r\n        'f32',\r\n        'f64',\r\n        'i8',\r\n        'i16',\r\n        'i32',\r\n        'i64',\r\n        'str',\r\n        'Option',\r\n        'Either',\r\n        'c_float',\r\n        'c_double',\r\n        'c_void',\r\n        'FILE',\r\n        'fpos_t',\r\n        'DIR',\r\n        'dirent',\r\n        'c_char',\r\n        'c_schar',\r\n        'c_uchar',\r\n        'c_short',\r\n        'c_ushort',\r\n        'c_int',\r\n        'c_uint',\r\n        'c_long',\r\n        'c_ulong',\r\n        'size_t',\r\n        'ptrdiff_t',\r\n        'clock_t',\r\n        'time_t',\r\n        'c_longlong',\r\n        'c_ulonglong',\r\n        'intptr_t',\r\n        'uintptr_t',\r\n        'off_t',\r\n        'dev_t',\r\n        'ino_t',\r\n        'pid_t',\r\n        'mode_t',\r\n        'ssize_t'\r\n    ],\r\n    constants: ['true', 'false', 'Some', 'None', 'Left', 'Right', 'Ok', 'Err'],\r\n    supportConstants: [\r\n        'EXIT_FAILURE',\r\n        'EXIT_SUCCESS',\r\n        'RAND_MAX',\r\n        'EOF',\r\n        'SEEK_SET',\r\n        'SEEK_CUR',\r\n        'SEEK_END',\r\n        '_IOFBF',\r\n        '_IONBF',\r\n        '_IOLBF',\r\n        'BUFSIZ',\r\n        'FOPEN_MAX',\r\n        'FILENAME_MAX',\r\n        'L_tmpnam',\r\n        'TMP_MAX',\r\n        'O_RDONLY',\r\n        'O_WRONLY',\r\n        'O_RDWR',\r\n        'O_APPEND',\r\n        'O_CREAT',\r\n        'O_EXCL',\r\n        'O_TRUNC',\r\n        'S_IFIFO',\r\n        'S_IFCHR',\r\n        'S_IFBLK',\r\n        'S_IFDIR',\r\n        'S_IFREG',\r\n        'S_IFMT',\r\n        'S_IEXEC',\r\n        'S_IWRITE',\r\n        'S_IREAD',\r\n        'S_IRWXU',\r\n        'S_IXUSR',\r\n        'S_IWUSR',\r\n        'S_IRUSR',\r\n        'F_OK',\r\n        'R_OK',\r\n        'W_OK',\r\n        'X_OK',\r\n        'STDIN_FILENO',\r\n        'STDOUT_FILENO',\r\n        'STDERR_FILENO'\r\n    ],\r\n    supportMacros: [\r\n        'format!',\r\n        'print!',\r\n        'println!',\r\n        'panic!',\r\n        'format_args!',\r\n        'unreachable!',\r\n        'write!',\r\n        'writeln!'\r\n    ],\r\n    operators: [\r\n        '!',\r\n        '!=',\r\n        '%',\r\n        '%=',\r\n        '&',\r\n        '&=',\r\n        '&&',\r\n        '*',\r\n        '*=',\r\n        '+',\r\n        '+=',\r\n        '-',\r\n        '-=',\r\n        '->',\r\n        '.',\r\n        '..',\r\n        '...',\r\n        '/',\r\n        '/=',\r\n        ':',\r\n        ';',\r\n        '<<',\r\n        '<<=',\r\n        '<',\r\n        '<=',\r\n        '=',\r\n        '==',\r\n        '=>',\r\n        '>',\r\n        '>=',\r\n        '>>',\r\n        '>>=',\r\n        '@',\r\n        '^',\r\n        '^=',\r\n        '|',\r\n        '|=',\r\n        '||',\r\n        '_',\r\n        '?',\r\n        '#'\r\n    ],\r\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\r\n    delimiters: /[,]/,\r\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\r\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\r\n    floatSuffixes: /f(32|64)/,\r\n    tokenizer: {\r\n        root: [\r\n            [\r\n                /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\r\n                {\r\n                    cases: {\r\n                        '@typeKeywords': 'keyword.type',\r\n                        '@keywords': 'keyword',\r\n                        '@supportConstants': 'keyword',\r\n                        '@supportMacros': 'keyword',\r\n                        '@constants': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // Designator\r\n            [/\\$/, 'identifier'],\r\n            // Lifetime annotations\r\n            [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, 'identifier'],\r\n            // Byte literal\r\n            [/'\\S'/, 'string.byteliteral'],\r\n            // Strings\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\r\n            { include: '@numbers' },\r\n            // Whitespace + comments\r\n            { include: '@whitespace' },\r\n            [\r\n                /@delimiters/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'delimiter'\r\n                    }\r\n                }\r\n            ],\r\n            [/[{}()\\[\\]<>]/, '@brackets'],\r\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        numbers: [\r\n            //Octal\r\n            [/(0o[0-7_]+)(@intSuffixes)?/, { token: 'number' }],\r\n            //Binary\r\n            [/(0b[0-1_]+)(@intSuffixes)?/, { token: 'number' }],\r\n            //Exponent\r\n            [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: 'number' }],\r\n            //Float\r\n            [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: 'number' }],\r\n            //Hexadecimal\r\n            [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: 'number' }],\r\n            //Integer\r\n            [/[\\d][\\d_]*(@intSuffixes?)?/, { token: 'number' }]\r\n        ]\r\n    }\r\n};\r\n"]}