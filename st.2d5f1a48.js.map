{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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","file":"st.2d5f1a48.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['(*', '*)']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')'],\r\n        ['var', 'end_var'],\r\n        ['var_input', 'end_var'],\r\n        ['var_output', 'end_var'],\r\n        ['var_in_out', 'end_var'],\r\n        ['var_temp', 'end_var'],\r\n        ['var_global', 'end_var'],\r\n        ['var_access', 'end_var'],\r\n        ['var_external', 'end_var'],\r\n        ['type', 'end_type'],\r\n        ['struct', 'end_struct'],\r\n        ['program', 'end_program'],\r\n        ['function', 'end_function'],\r\n        ['function_block', 'end_function_block'],\r\n        ['action', 'end_action'],\r\n        ['step', 'end_step'],\r\n        ['initial_step', 'end_step'],\r\n        ['transaction', 'end_transaction'],\r\n        ['configuration', 'end_configuration'],\r\n        ['tcp', 'end_tcp'],\r\n        ['recource', 'end_recource'],\r\n        ['channel', 'end_channel'],\r\n        ['library', 'end_library'],\r\n        ['folder', 'end_folder'],\r\n        ['binaries', 'end_binaries'],\r\n        ['includes', 'end_includes'],\r\n        ['sources', 'end_sources']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '[', close: ']' },\r\n        { open: '{', close: '}' },\r\n        { open: '(', close: ')' },\r\n        { open: '/*', close: '*/' },\r\n        { open: \"'\", close: \"'\", notIn: ['string_sq'] },\r\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: 'var', close: 'end_var' },\r\n        { open: 'var_input', close: 'end_var' },\r\n        { open: 'var_output', close: 'end_var' },\r\n        { open: 'var_in_out', close: 'end_var' },\r\n        { open: 'var_temp', close: 'end_var' },\r\n        { open: 'var_global', close: 'end_var' },\r\n        { open: 'var_access', close: 'end_var' },\r\n        { open: 'var_external', close: 'end_var' },\r\n        { open: 'type', close: 'end_type' },\r\n        { open: 'struct', close: 'end_struct' },\r\n        { open: 'program', close: 'end_program' },\r\n        { open: 'function', close: 'end_function' },\r\n        { open: 'function_block', close: 'end_function_block' },\r\n        { open: 'action', close: 'end_action' },\r\n        { open: 'step', close: 'end_step' },\r\n        { open: 'initial_step', close: 'end_step' },\r\n        { open: 'transaction', close: 'end_transaction' },\r\n        { open: 'configuration', close: 'end_configuration' },\r\n        { open: 'tcp', close: 'end_tcp' },\r\n        { open: 'recource', close: 'end_recource' },\r\n        { open: 'channel', close: 'end_channel' },\r\n        { open: 'library', close: 'end_library' },\r\n        { open: 'folder', close: 'end_folder' },\r\n        { open: 'binaries', close: 'end_binaries' },\r\n        { open: 'includes', close: 'end_includes' },\r\n        { open: 'sources', close: 'end_sources' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\r\n            end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.st',\r\n    ignoreCase: true,\r\n    brackets: [\r\n        { token: 'delimiter.curly', open: '{', close: '}' },\r\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\r\n        { token: 'delimiter.square', open: '[', close: ']' }\r\n    ],\r\n    keywords: [\r\n        'if',\r\n        'end_if',\r\n        'elsif',\r\n        'else',\r\n        'case',\r\n        'of',\r\n        'to',\r\n        '__try',\r\n        '__catch',\r\n        '__finally',\r\n        'do',\r\n        'with',\r\n        'by',\r\n        'while',\r\n        'repeat',\r\n        'end_while',\r\n        'end_repeat',\r\n        'end_case',\r\n        'for',\r\n        'end_for',\r\n        'task',\r\n        'retain',\r\n        'non_retain',\r\n        'constant',\r\n        'with',\r\n        'at',\r\n        'exit',\r\n        'return',\r\n        'interval',\r\n        'priority',\r\n        'address',\r\n        'port',\r\n        'on_channel',\r\n        'then',\r\n        'iec',\r\n        'file',\r\n        'uses',\r\n        'version',\r\n        'packagetype',\r\n        'displayname',\r\n        'copyright',\r\n        'summary',\r\n        'vendor',\r\n        'common_source',\r\n        'from',\r\n        'extends'\r\n    ],\r\n    constant: ['false', 'true', 'null'],\r\n    defineKeywords: [\r\n        'var',\r\n        'var_input',\r\n        'var_output',\r\n        'var_in_out',\r\n        'var_temp',\r\n        'var_global',\r\n        'var_access',\r\n        'var_external',\r\n        'end_var',\r\n        'type',\r\n        'end_type',\r\n        'struct',\r\n        'end_struct',\r\n        'program',\r\n        'end_program',\r\n        'function',\r\n        'end_function',\r\n        'function_block',\r\n        'end_function_block',\r\n        'interface',\r\n        'end_interface',\r\n        'method',\r\n        'end_method',\r\n        'property',\r\n        'end_property',\r\n        'namespace',\r\n        'end_namespace',\r\n        'configuration',\r\n        'end_configuration',\r\n        'tcp',\r\n        'end_tcp',\r\n        'resource',\r\n        'end_resource',\r\n        'channel',\r\n        'end_channel',\r\n        'library',\r\n        'end_library',\r\n        'folder',\r\n        'end_folder',\r\n        'binaries',\r\n        'end_binaries',\r\n        'includes',\r\n        'end_includes',\r\n        'sources',\r\n        'end_sources',\r\n        'action',\r\n        'end_action',\r\n        'step',\r\n        'initial_step',\r\n        'end_step',\r\n        'transaction',\r\n        'end_transaction'\r\n    ],\r\n    typeKeywords: [\r\n        'int',\r\n        'sint',\r\n        'dint',\r\n        'lint',\r\n        'usint',\r\n        'uint',\r\n        'udint',\r\n        'ulint',\r\n        'real',\r\n        'lreal',\r\n        'time',\r\n        'date',\r\n        'time_of_day',\r\n        'date_and_time',\r\n        'string',\r\n        'bool',\r\n        'byte',\r\n        'word',\r\n        'dword',\r\n        'array',\r\n        'pointer',\r\n        'lword'\r\n    ],\r\n    operators: [\r\n        '=',\r\n        '>',\r\n        '<',\r\n        ':',\r\n        ':=',\r\n        '<=',\r\n        '>=',\r\n        '<>',\r\n        '&',\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '**',\r\n        'MOD',\r\n        '^',\r\n        'or',\r\n        'and',\r\n        'not',\r\n        'xor',\r\n        'abs',\r\n        'acos',\r\n        'asin',\r\n        'atan',\r\n        'cos',\r\n        'exp',\r\n        'expt',\r\n        'ln',\r\n        'log',\r\n        'sin',\r\n        'sqrt',\r\n        'tan',\r\n        'sel',\r\n        'max',\r\n        'min',\r\n        'limit',\r\n        'mux',\r\n        'shl',\r\n        'shr',\r\n        'rol',\r\n        'ror',\r\n        'indexof',\r\n        'sizeof',\r\n        'adr',\r\n        'adrinst',\r\n        'bitadr',\r\n        'is_valid',\r\n        'ref',\r\n        'ref_to'\r\n    ],\r\n    builtinVariables: [],\r\n    builtinFunctions: [\r\n        'sr',\r\n        'rs',\r\n        'tp',\r\n        'ton',\r\n        'tof',\r\n        'eq',\r\n        'ge',\r\n        'le',\r\n        'lt',\r\n        'ne',\r\n        'round',\r\n        'trunc',\r\n        'ctd',\r\n        'сtu',\r\n        'ctud',\r\n        'r_trig',\r\n        'f_trig',\r\n        'move',\r\n        'concat',\r\n        'delete',\r\n        'find',\r\n        'insert',\r\n        'left',\r\n        'len',\r\n        'replace',\r\n        'right',\r\n        'rtc'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // C# style strings\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/(\\.\\.)/, 'delimiter'],\r\n            [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, 'number.hex'],\r\n            [/\\b(2#[01\\_]+)+\\b/, 'number.binary'],\r\n            [/\\b(8#[0-9\\_]*)+\\b/, 'number.octal'],\r\n            [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, 'number.float'],\r\n            [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, 'number.float'],\r\n            [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, 'number'],\r\n            [/\\d+/, 'number'],\r\n            [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, 'tag'],\r\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, 'tag'],\r\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\r\n            [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, 'tag'],\r\n            [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, 'predefined'],\r\n            [/[;]/, 'delimiter'],\r\n            [/[.]/, { token: 'delimiter', next: '@params' }],\r\n            // identifiers and keywords\r\n            [\r\n                /[a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'operators',\r\n                        '@keywords': 'keyword',\r\n                        '@typeKeywords': 'type',\r\n                        '@defineKeywords': 'variable',\r\n                        '@constant': 'constant',\r\n                        '@builtinVariables': 'predefined',\r\n                        '@builtinFunctions': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            { include: '@whitespace' },\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\r\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        params: [\r\n            [/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: 'identifier', next: '@pop' }],\r\n            [/\\b[A-Za-z0-9_]+\\b/, 'variable.name', '@pop']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@push'],\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        comment2: [\r\n            [/[^\\(*]+/, 'comment'],\r\n            [/\\(\\*/, 'comment', '@push'],\r\n            ['\\\\*\\\\)', 'comment', '@pop'],\r\n            [/[\\(*]/, 'comment']\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, 'white'],\r\n            [/\\/\\/.*$/, 'comment'],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\(\\*/, 'comment', '@comment2']\r\n        ],\r\n        string_dq: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        string_sq: [\r\n            [/[^\\\\']+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ]\r\n    }\r\n};\r\n"]}