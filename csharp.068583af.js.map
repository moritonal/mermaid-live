{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","file":"csharp.068583af.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.cs',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.square' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    keywords: [\r\n        'extern',\r\n        'alias',\r\n        'using',\r\n        'bool',\r\n        'decimal',\r\n        'sbyte',\r\n        'byte',\r\n        'short',\r\n        'ushort',\r\n        'int',\r\n        'uint',\r\n        'long',\r\n        'ulong',\r\n        'char',\r\n        'float',\r\n        'double',\r\n        'object',\r\n        'dynamic',\r\n        'string',\r\n        'assembly',\r\n        'is',\r\n        'as',\r\n        'ref',\r\n        'out',\r\n        'this',\r\n        'base',\r\n        'new',\r\n        'typeof',\r\n        'void',\r\n        'checked',\r\n        'unchecked',\r\n        'default',\r\n        'delegate',\r\n        'var',\r\n        'const',\r\n        'if',\r\n        'else',\r\n        'switch',\r\n        'case',\r\n        'while',\r\n        'do',\r\n        'for',\r\n        'foreach',\r\n        'in',\r\n        'break',\r\n        'continue',\r\n        'goto',\r\n        'return',\r\n        'throw',\r\n        'try',\r\n        'catch',\r\n        'finally',\r\n        'lock',\r\n        'yield',\r\n        'from',\r\n        'let',\r\n        'where',\r\n        'join',\r\n        'on',\r\n        'equals',\r\n        'into',\r\n        'orderby',\r\n        'ascending',\r\n        'descending',\r\n        'select',\r\n        'group',\r\n        'by',\r\n        'namespace',\r\n        'partial',\r\n        'class',\r\n        'field',\r\n        'event',\r\n        'method',\r\n        'param',\r\n        'public',\r\n        'protected',\r\n        'internal',\r\n        'private',\r\n        'abstract',\r\n        'sealed',\r\n        'static',\r\n        'struct',\r\n        'readonly',\r\n        'volatile',\r\n        'virtual',\r\n        'override',\r\n        'params',\r\n        'get',\r\n        'set',\r\n        'add',\r\n        'remove',\r\n        'operator',\r\n        'true',\r\n        'false',\r\n        'implicit',\r\n        'explicit',\r\n        'interface',\r\n        'enum',\r\n        'null',\r\n        'async',\r\n        'await',\r\n        'fixed',\r\n        'sizeof',\r\n        'stackalloc',\r\n        'unsafe',\r\n        'nameof',\r\n        'when'\r\n    ],\r\n    namespaceFollows: ['namespace', 'using'],\r\n    parenFollows: ['if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'],\r\n    operators: [\r\n        '=',\r\n        '??',\r\n        '||',\r\n        '&&',\r\n        '|',\r\n        '^',\r\n        '&',\r\n        '==',\r\n        '!=',\r\n        '<=',\r\n        '>=',\r\n        '<<',\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '/',\r\n        '%',\r\n        '!',\r\n        '~',\r\n        '++',\r\n        '--',\r\n        '+=',\r\n        '-=',\r\n        '*=',\r\n        '/=',\r\n        '%=',\r\n        '&=',\r\n        '|=',\r\n        '^=',\r\n        '<<=',\r\n        '>>=',\r\n        '>>',\r\n        '=>'\r\n    ],\r\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n    // escape sequences\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [\r\n                /\\@?[a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@namespaceFollows': {\r\n                            token: 'keyword.$0',\r\n                            next: '@namespace'\r\n                        },\r\n                        '@keywords': {\r\n                            token: 'keyword.$0',\r\n                            next: '@qualified'\r\n                        },\r\n                        '@default': { token: 'identifier', next: '@qualified' }\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [\r\n                /}/,\r\n                {\r\n                    cases: {\r\n                        '$S2==interpolatedstring': {\r\n                            token: 'string.quote',\r\n                            next: '@pop'\r\n                        },\r\n                        '$S2==litinterpstring': {\r\n                            token: 'string.quote',\r\n                            next: '@pop'\r\n                        },\r\n                        '@default': '@brackets'\r\n                    }\r\n                }\r\n            ],\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/[<>](?!@symbols)/, '@brackets'],\r\n            [\r\n                /@symbols/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // numbers\r\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\r\n            [/0[bB][01_]+/, 'number.hex'],\r\n            [/[0-9_]+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@string' }],\r\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\r\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\r\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\r\n            // characters\r\n            [/'[^\\\\']'/, 'string'],\r\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n            [/'/, 'string.invalid']\r\n        ],\r\n        qualified: [\r\n            [\r\n                /[a-zA-Z_][\\w]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\./, 'delimiter'],\r\n            ['', '', '@pop']\r\n        ],\r\n        namespace: [\r\n            { include: '@whitespace' },\r\n            [/[A-Z]\\w*/, 'namespace'],\r\n            [/[\\.=]/, 'delimiter'],\r\n            ['', '', '@pop']\r\n        ],\r\n        comment: [\r\n            [/[^\\/*]+/, 'comment'],\r\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\r\n            ['\\\\*/', 'comment', '@pop'],\r\n            [/[\\/*]/, 'comment']\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litstring: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        litinterpstring: [\r\n            [/[^\"{]+/, 'string'],\r\n            [/\"\"/, 'string.escape'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        interpolatedstring: [\r\n            [/[^\\\\\"{]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/{{/, 'string.escape'],\r\n            [/}}/, 'string.escape'],\r\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/\"/, { token: 'string.quote', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\r\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\r\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\r\n            [/\\/\\*/, 'comment', '@comment'],\r\n            [/\\/\\/.*$/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"]}