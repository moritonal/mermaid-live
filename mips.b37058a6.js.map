{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"names":["conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","token","next","string","herestring","comment","hereregexp"],"mappings":"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","file":"mips.b37058a6.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: false,\r\n    tokenPostfix: '.mips',\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        '.data',\r\n        '.text',\r\n        'syscall',\r\n        'trap',\r\n        'add',\r\n        'addu',\r\n        'addi',\r\n        'addiu',\r\n        'and',\r\n        'andi',\r\n        'div',\r\n        'divu',\r\n        'mult',\r\n        'multu',\r\n        'nor',\r\n        'or',\r\n        'ori',\r\n        'sll',\r\n        'slv',\r\n        'sra',\r\n        'srav',\r\n        'srl',\r\n        'srlv',\r\n        'sub',\r\n        'subu',\r\n        'xor',\r\n        'xori',\r\n        'lhi',\r\n        'lho',\r\n        'lhi',\r\n        'llo',\r\n        'slt',\r\n        'slti',\r\n        'sltu',\r\n        'sltiu',\r\n        'beq',\r\n        'bgtz',\r\n        'blez',\r\n        'bne',\r\n        'j',\r\n        'jal',\r\n        'jalr',\r\n        'jr',\r\n        'lb',\r\n        'lbu',\r\n        'lh',\r\n        'lhu',\r\n        'lw',\r\n        'li',\r\n        'la',\r\n        'sb',\r\n        'sh',\r\n        'sw',\r\n        'mfhi',\r\n        'mflo',\r\n        'mthi',\r\n        'mtlo',\r\n        'move'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [\r\n                /[.a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        this: 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            // delimiters\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', \"@herestring.'''\"],\r\n            [\r\n                /\"/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /'/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: \"@string.'\" }\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [\r\n                /#{/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': {\r\n                            token: 'string',\r\n                            next: 'root.interpolatedstring'\r\n                        },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /[\"']/,\r\n                {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [\r\n                /(\"\"\"|''')/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment'],\r\n            [/#/, 'comment']\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp']\r\n        ]\r\n    }\r\n};\r\n"]}