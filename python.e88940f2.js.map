{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/python/python.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","onEnterRules","beforeText","RegExp","action","indentAction","languages","IndentAction","Indent","folding","offSide","markers","start","end","language","defaultToken","tokenPostfix","keywords","token","tokenizer","root","include","cases","whitespace","endDocString","endDblDocString","numbers","strings","stringBody","dblStringBody"],"mappings":"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","file":"python.e88940f2.js","sourceRoot":"..","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#',\r\n        blockComment: [\"'''\", \"'''\"]\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"', notIn: ['string'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp('^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$'),\r\n            action: { indentAction: languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n    folding: {\r\n        offSide: true,\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.python',\r\n    keywords: [\r\n        // This section is the result of running\r\n        // `for k in keyword.kwlist: print('  \"' + k + '\",')` in a Python REPL,\r\n        // though note that the output from Python 3 is not a strict superset of the\r\n        // output from Python 2.\r\n        'False',\r\n        'None',\r\n        'True',\r\n        'and',\r\n        'as',\r\n        'assert',\r\n        'async',\r\n        'await',\r\n        'break',\r\n        'class',\r\n        'continue',\r\n        'def',\r\n        'del',\r\n        'elif',\r\n        'else',\r\n        'except',\r\n        'exec',\r\n        'finally',\r\n        'for',\r\n        'from',\r\n        'global',\r\n        'if',\r\n        'import',\r\n        'in',\r\n        'is',\r\n        'lambda',\r\n        'nonlocal',\r\n        'not',\r\n        'or',\r\n        'pass',\r\n        'print',\r\n        'raise',\r\n        'return',\r\n        'try',\r\n        'while',\r\n        'with',\r\n        'yield',\r\n        'int',\r\n        'float',\r\n        'long',\r\n        'complex',\r\n        'hex',\r\n        'abs',\r\n        'all',\r\n        'any',\r\n        'apply',\r\n        'basestring',\r\n        'bin',\r\n        'bool',\r\n        'buffer',\r\n        'bytearray',\r\n        'callable',\r\n        'chr',\r\n        'classmethod',\r\n        'cmp',\r\n        'coerce',\r\n        'compile',\r\n        'complex',\r\n        'delattr',\r\n        'dict',\r\n        'dir',\r\n        'divmod',\r\n        'enumerate',\r\n        'eval',\r\n        'execfile',\r\n        'file',\r\n        'filter',\r\n        'format',\r\n        'frozenset',\r\n        'getattr',\r\n        'globals',\r\n        'hasattr',\r\n        'hash',\r\n        'help',\r\n        'id',\r\n        'input',\r\n        'intern',\r\n        'isinstance',\r\n        'issubclass',\r\n        'iter',\r\n        'len',\r\n        'locals',\r\n        'list',\r\n        'map',\r\n        'max',\r\n        'memoryview',\r\n        'min',\r\n        'next',\r\n        'object',\r\n        'oct',\r\n        'open',\r\n        'ord',\r\n        'pow',\r\n        'print',\r\n        'property',\r\n        'reversed',\r\n        'range',\r\n        'raw_input',\r\n        'reduce',\r\n        'reload',\r\n        'repr',\r\n        'reversed',\r\n        'round',\r\n        'self',\r\n        'set',\r\n        'setattr',\r\n        'slice',\r\n        'sorted',\r\n        'staticmethod',\r\n        'str',\r\n        'sum',\r\n        'super',\r\n        'tuple',\r\n        'type',\r\n        'unichr',\r\n        'unicode',\r\n        'vars',\r\n        'xrange',\r\n        'zip',\r\n        '__dict__',\r\n        '__methods__',\r\n        '__members__',\r\n        '__class__',\r\n        '__bases__',\r\n        '__name__',\r\n        '__mro__',\r\n        '__subclasses__',\r\n        '__init__',\r\n        '__import__'\r\n    ],\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            [/[,:;]/, 'delimiter'],\r\n            [/[{}\\[\\]()]/, '@brackets'],\r\n            [/@[a-zA-Z_]\\w*/, 'tag'],\r\n            [\r\n                /[a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        // Deal with white space, including single and multi-line comments\r\n        whitespace: [\r\n            [/\\s+/, 'white'],\r\n            [/(^#.*$)/, 'comment'],\r\n            [/'''/, 'string', '@endDocString'],\r\n            [/\"\"\"/, 'string', '@endDblDocString']\r\n        ],\r\n        endDocString: [\r\n            [/[^']+/, 'string'],\r\n            [/\\\\'/, 'string'],\r\n            [/'''/, 'string', '@popall'],\r\n            [/'/, 'string']\r\n        ],\r\n        endDblDocString: [\r\n            [/[^\"]+/, 'string'],\r\n            [/\\\\\"/, 'string'],\r\n            [/\"\"\"/, 'string', '@popall'],\r\n            [/\"/, 'string']\r\n        ],\r\n        // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\r\n        numbers: [\r\n            [/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'],\r\n            [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string.escape', '@popall'],\r\n            [/'/, 'string.escape', '@stringBody'],\r\n            [/\"$/, 'string.escape', '@popall'],\r\n            [/\"/, 'string.escape', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\']+$/, 'string', '@popall'],\r\n            [/[^\\\\']+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/'/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\"]+$/, 'string', '@popall'],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/\\\\./, 'string'],\r\n            [/\"/, 'string.escape', '@popall'],\r\n            [/\\\\$/, 'string']\r\n        ]\r\n    }\r\n};\r\n"]}